/**********************
 * Window Decorations *
 *********************/
decoration {
  border-radius: $window_radius $window_radius 0 0;
  // lamefun trick to get rounded borders regardless of CSD use
  border-width: 0px;

  // this needs to be transparent
  // see bug #722563
  $_wm_border: if($variant=='light', transparentize(black, 0.77), transparentize(black, 0.25));
  $_wm_border_backdrop: if($variant=='light', transparentize(black, 0.82), transparentize(black, 0.25));

  box-shadow: 0 1px 3px 3px transparent,
              0 2px 8px 2px transparentize(black, 0.87),
              0 3px 20px 10px transparentize(black, 0.91),
              0 6px 32px 16px transparentize(black, 0.96),
              0 0 0 1px $_wm_border; //doing borders with box-shadow

  // FIXME rationalize shadows

  // this is used for the resize cursor area
  margin: 10px;

  &:backdrop {
    // the transparent shadow here is to enforce that the shadow extents don't
    // change when we go to backdrop, to prevent jumping windows.
    // The biggest shadow should be in the same order then in the active state
    // or the jumping will happen during the transition.
    box-shadow: 0 1px 3px 3px transparentize(black, 0.91),
                0 2px 14px 5px transparentize(black, 0.95),
                0 4px 28px 12px transparentize(black, 0.97),
                0 6px 32px 16px transparent,
                0 0 0 1px $_wm_border_backdrop;
    transition: $backdrop_transition;
  }

  .maximized &,
  .fullscreen & { border-radius: 0; box-shadow: none; }

  .tiled &,
  .tiled-top &,
  .tiled-right &,
  .tiled-bottom &,
  .tiled-left & {
    border-radius: 0;
    box-shadow: 0 0 0 1px $_wm_border_backdrop,
                0 0 0 20px transparent; //transparent control workaround -- #3670

    &:backdrop { box-shadow: 0 0 0 1px $_wm_border_backdrop,
                             0 0 0 20px transparent; // #3670
    }
   }

  .popup & { box-shadow: none; }

  // server-side decorations as used by mutter
  // just doing borders, wm draws actual shadows
  .ssd & { box-shadow: 0 0 0 1px $_wm_border; }
  .ssd &:backdrop { box-shadow: 0 0 0 1px $_wm_border_backdrop; }

  .csd.popup & {
    border-radius: $menu_radius;
    box-shadow: 0 1px 2px 1px transparentize(black, 0.8),
                0 0 0 1px $_wm_border;
  }

  tooltip.csd & {
    border-radius: 5px;
    box-shadow: none;
  }

  messagedialog.csd & {
    border-radius: $window_radius;
    box-shadow: 0 1px 2px transparentize(black, 0.8),
                0 0 0 1px transparentize($_wm_border, 0.1);
  }

  .solid-csd & {
    margin: 0;
    padding: 4px;
    background-color: $borders_color;
    border: solid 1px $borders_color;
    border-radius: 0;
    box-shadow: inset 0 0 0 3px $headerbar_color, inset 0 1px $top_hilight;

    &:backdrop { box-shadow: inset 0 0 0 3px $backdrop_bg_color, inset 0 1px $top_hilight; }
  }
}

// Window Close button
button.titlebutton {
  @extend %button_basic;

  @extend %button_basic_flat;

  &:not(.appmenu) {
    border-radius: 9999px;
    padding: $_hb_btn_pad;
    margin: if($_sizevariant == 'default', 0 2px, 0);
    min-width: 0;
    min-height: 0;
    
    &:hover {
    	@include button(undecorated-hover,$c:darken($headerbar_color,6%));
  	}
  	&:active,
  	&:checked { @include button(undecorated-active,$c:darken($headerbar_color,10%)); }
  }
}

// Unified window

window.csd.unified:not(.solid-csd):not(.fullscreen) {
  // Remove the sheen on headerbar...
  headerbar {
    box-shadow: inset 0 1px rgba(255, 255, 255, if($variant == 'light', 0.7, 0));

    &.selection-mode {
      box-shadow: none;
    }
  }

  // ...and add it on the window itself
  > decoration-overlay {
    // Use a white sheen instead of @borders, as it has to be neutral enough
    // for any content and not just headerbar background
    box-shadow: inset 0 1px rgba(255, 255, 255, if($variant == 'light', 0.34, 0.065));
  }

  &:not(.tiled):not(.tiled-top):not(.tiled-bottom):not(.tiled-left):not(.tiled-right):not(.maximized) {
    &,
    > decoration,
    > decoration-overlay {
      border-radius: $window_radius;
    }
    
    @if $variant == 'dark' {
    	> decoration-overlay { box-shadow: inset 0 0 0 1px transparentize(white, .9); }
    }
  }
}
