/***************
 * Header bars *
 ***************/
%titlebar,
headerbar {
  padding: 0 6px;
  min-height: $_headerbar_height;
  border-width: 0 0 1px;
  border-style: solid;
  border-color: $alt_borders_color;
  border-radius: 0;

  @include headerbar_fill(darken($bg_color, 10%));

  &:backdrop {
    background-image: linear-gradient(to top, $bg_color, $bg_color);
    box-shadow: inset 0 1px $top_hilight;

    transition: $backdrop_transition;
    
    > * { opacity: 0.5; }
  }
  
  leaflet:backdrop { opacity: 1.0; } // workaround for gnome-control-center double opacity issue

  .title {
    padding-left: 12px;
    padding-right: 12px;
    font-weight: bold;
  }

  .subtitle {
    font-size: smaller;
    padding-left: 12px;
    padding-right: 12px;

    @extend .dim-label;
  }

  /* Darken switchbuttons for headerbars. issue #1588 */
  stackswitcher button:checked,
  button:not(.flat).toggle:checked {

    background: if($variant == 'light', image(darken($bg_color, 17%)), image(darken($bg_color, 9%)));
    border-color: darken($borders_color, 3%);
    border-top-color: darken($borders_color, 8%);
  }

  .selection-mode &,
  &.selection-mode {
    $_hc: mix($top_hilight, $suggested_bg_color, 50%); // hilight color

    color: $selected_fg_color;
    border-color: $suggested_border_color;
    text-shadow: none;
    -gtk-icon-shadow: none;

    @include headerbar_fill($suggested_bg_color, $_hc);

    &:backdrop {
      background-image: image($suggested_bg_color);
      box-shadow: inset 0 1px mix($top_hilight, $suggested_bg_color, 60%);
      
      label { 
        text-shadow: none;
        color: $selected_fg_color; 
      }
    }

    button {
      @include button(normal, $suggested_bg_color, $selected_fg_color);

      @at-root %selection_mode_button_flat,
      &.flat { @include button(undecorated); }

      &:hover { @include button(hover, $suggested_bg_color, $selected_fg_color); }

      &:active,
      &:checked,
      &.toggle:checked,
      &.toggle:active { @include button(active, $suggested_bg_color, $selected_fg_color); }

      @at-root %selection_mode_button_flat,
      &.flat { &:backdrop, &:disabled, &:backdrop:disabled { @include button(undecorated); }}

      &:disabled {
        @include button(insensitive, $suggested_bg_color, $selected_fg_color);

        &:active,
        &:checked { @include button(insensitive-active, $suggested_bg_color, $selected_fg_color); }
      }

      &.suggested-action {
        @include button(normal);

        border-color: $suggested_border_color;

        &:hover {
          @include button(hover);

          border-color: $suggested_border_color;
        }

        &:active {
          @include button(active);

          border-color: $suggested_border_color;
        }

        &:disabled {
          @include button(insensitive);

          border-color: $suggested_border_color;
        }
      }
    }

    .selection-menu {
      border-color: transparentize($suggested_bg_color, 1);
      background-color: transparentize($suggested_bg_color, 1);
      background-image: none;
      box-shadow: none;
      min-height: 20px;
      padding: $_sel_menu_pad;

      arrow { -GtkArrow-arrow-scaling: 1; }

      .arrow {
        -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
        color: transparentize($selected_fg_color,0.5);
        -gtk-icon-shadow: none;
      }
    }
  }

  // squared corners when the window is maximized, tiled, or fullscreen
  .tiled &,
  .tiled-top &,
  .tiled-right &,
  .tiled-bottom &,
  .tiled-left &,
  .maximized &,
  .fullscreen & {
    &:backdrop, & {
      border-radius: 0;
    }
  }

  &.default-decoration {
    min-height: if($_sizevariant == 'default', 28px, 24px);
    padding: 4px;

    button.titlebutton {
      min-height: if($_sizevariant == 'default', 26px, 22px);
      min-width: if($_sizevariant == 'default', 26px, 22px);
      margin: 0;
      padding: 0;
      
      // ssd decoration workaround
      &:backdrop {
				color: mix($bg_color, $fg_color, 50%);
		
				&:hover { @include button(undecorated-hover,$c:mix($bg_color,darken($headerbar_color,6%),50%)); }
				&:active, 
				&:checked { @include button(undecorated-active,$c:mix($bg_color,darken($headerbar_color,10%),50%)); }
			}
    }
    
    // Workaround for SSD decorations
    // because of lacking opacity support (?)
    // I'm sure if Mutter ported to Gtk4 this issue is gone
    &:backdrop { 
    	color: mix($bg_color, $fg_color, 50%);
    	opacity: 1.0;
    }
  }

  separator.titlebutton { opacity: 0; } /* hide the close button separator */

  .solid-csd & {
    &:backdrop, & {
      &:dir(rtl), &:dir(ltr) { // specificity bump
        margin-left: -1px;
        margin-right: -1px;
        margin-top: -1px;
        border-radius: 0;
        box-shadow: none;
      }
    }
  }
}

headerbar {
  // add vertical margins to common widget on the headerbar to avoid them spanning the whole height
  entry,
  spinbutton,
  separator:not(.sidebar),
  button {
    margin-top: $_hb_btn_pad;
    margin-bottom: $_hb_btn_pad;
  }
  switch {
    margin-top: $_switch_margin;
    margin-bottom: $_switch_margin;
  }

  &.titlebar headerbar:not(.titlebar) {
    // Drop the background of non-titlebar nested headerbars. This is needed to
    // work around headerbar sliding animation issues without refactoring
    // Adwaita's support of titlebars and headerbars as it may break
    // applications.
    // See https://gitlab.gnome.org/GNOME/gtk/issues/1264 for more information.
    background: none;
    box-shadow: none;
  }

  @if $_sizevariant == 'compact' {
    button.color {
      min-width: 22px;
      min-height: 14px;
    }
  }
}

.background .titlebar {
  &:backdrop, & {
    border-top-left-radius: $window_radius;
    border-top-right-radius: $window_radius;
  }
}

.background.tiled .titlebar,
.background.tiled-top .titlebar,
.background.tiled-right .titlebar,
.background.tiled-bottom .titlebar,
.background.tiled-left .titlebar,
.background.maximized .titlebar,
.background.solid-csd .titlebar {
  &:backdrop, & {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
}

headerbar { // headerbar border rounding

  window separator:first-child + &,
  window &:first-child { &:backdrop, & { border-top-left-radius: 7px; }}
  window &:last-child { &:backdrop, & { border-top-right-radius: 7px; }}

  window stack & { // tackles the stacked headerbars case
    &:first-child, &:last-child {
      &:backdrop, & {
        border-top-left-radius: 7px;
        border-top-right-radius: 7px;
      }
    }
  }

  window.tiled &,
  window.tiled-top &,
  window.tiled-right &,
  window.tiled-bottom &,
  window.tiled-left &,
  window.maximized &,
  window.fullscreen &,
  window.solid-csd & {
    &, &:backdrop {
      &,
      &:first-child,
      &:last-child,
      &:only-child {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }
    }
  }
}

.titlebar:not(headerbar) {
  separator { background-color: $borders_color; }  // FIXME: use darker border?
}

// Development versions of apps to use a differently styled headerbar

window.devel {
  headerbar.titlebar:not(.selection-mode) {
    $c: darken($bg_color, 10%);
    $gradient: cross-fade(10% -gtk-icontheme("system-run-symbolic"), image(transparent)) 90% 0/256px 256px no-repeat,
               linear-gradient(to right, transparent 65%, transparentize($selected_bg_color, 0.8)),
               linear-gradient(to top, darken($c, 3%), $c 3px, lighten($c, 6%));
    @if $variant == 'dark' {
      $gradient: cross-fade(10% -gtk-icontheme("system-run-symbolic"), image(transparent)) 90% 0/256px 256px no-repeat,
                 linear-gradient(to right, transparent 65%, transparentize($selected_bg_color, 0.9)),
                 linear-gradient(to top, lighten($c, 3%) 3px, lighten($c, 5%));
    }

    background: $bg_color $gradient;

    &:backdrop {
      background: $bg_color cross-fade(10% -gtk-icontheme("system-run-symbolic"), image(transparent)) 90% 0/256px 256px no-repeat,
                  image($bg_color); /* background-color would flash */
    }
  }
}
