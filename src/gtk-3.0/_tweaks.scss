// Additional tweaks
// Instead modifying _common.scss, let some tweaks available here

// make compact sizings only available in -compact sizevariant
@if $_sizevariant == 'compact' {
	/**** button.color sizing fix ****/
	button.color {
		min-width: 22px;
		min-height: 14px;
	}

	/**** Reduce PlacesSidebar height ****/
	placessidebar row { min-height: 34px; }

	/**** Make titlebar height more 'compact' ****/
	.titlebar.default-decoration {
		min-height: 24px;

		button.titlebutton {
			min-height: 22px;
			min-width: 22px;
		}
	}

	/**** Fix slimmed circular buttons ****/
	* {
		& button.circular { min-width: 0; }
	}

	/**** Notebooks/Tabs tweaks ****/
	notebook > header tab {
		min-width: $_entry_height;
		min-height: $_entry_height;
		padding: 1px 10px;

		button.flat {
			min-width: 18px;
			min-height: 18px;
		}
	}

	/**** Fix for apps that uses HdyViewSwitcher in headerbar ****/
	// libhandy 0.x specific, for libhandy1 styling go to _libhandy.scss
	headerbar {
		hdyviewswitcher {
			button.radio {
				box {
					&.horizontal.wide { margin: -6px 0; }

					&.vertical.narrow { margin: -3px 0; }
				}
			}

			label { margin: -2px 0; }
		}
	}

	/* Message dialog button padding reduce */
	messagedialog.csd .dialog-action-area button { padding: 6px 8px; }
}

/**** selectionmode tweaks ****/
headerbar.selection-mode {
	text-shadow: none;
	-gtk-icon-shadow: none;

	//top hilight override
	box-shadow: inset 0 1px transparentize(white, 0.8);
	&:backdrop {
		box-shadow: inset 0 1px transparentize(white, 0.8);
		label {
			color: $backdrop_selected_fg_color;
			opacity: 0.8;
		}
	}
}

/**** switch tweaks ****/
switch {
	headerbar & {
		border-color: darken($borders_color, 3%);
		background-color: if($variant == 'light',
											darken($dark_fill, 8%),
											darken($dark_fill, 4%));
	}

	slider {
		@include button(normal);
		background-clip: padding-box;
		border-bottom-color: $borders_color;
	}

	&:hover slider {
		@include button(hover);
		border-bottom-color: $borders_color;
	}

	&:checked > slider {
		border: 1px solid $checkradio_borders_color;
	}

	&:disabled slider { @include button(insensitive); }
	&:backdrop {
		slider {
			@include button(backdrop);
			transition: $backdrop_transition;
		}

		&:checked > slider { border-color: $checkradio_borders_color; }

		&:disabled slider { @include button(backdrop-insensitive); }
	}
}

/**** Context menu tweaks ****/
// Derived from yaru-theme
decoration {
	$_wm_border: if($variant == 'light', transparentize(black, 0.77), transparentize(black, 0.25));

	.csd.popup & {
		border-radius: $menu_radius;
		box-shadow: 0 1px 2px transparentize(black, 0.7),
								0 0 0 1px $_wm_border;
	}
}

menu,
.menu,
.context-menu {
	menuitem {
		&:hover {
			color: $text_color;
			background-color: $popover_hover_color;
		}
	}
}

/**** placessidebar tweaks ****/
placessidebar {
	row {
		&:hover { background-color: darken($popover_hover_color, 5%); }
		&:selected {
			&.activatable, & {
				background-color: $popover_hover_color;
				color: inherit;

				&:hover { background-color: darken($popover_hover_color, 5%); }
			}
		}

		&:backdrop {
			color: inherit;

			&:selected {
				&.activatable, & {
					background-color: $popover_hover_color;
					color: inherit;

					&:hover { background-color: darken($popover_hover_color, 5%); }
				}
			}
		}

		@at-root button.sidebar-button {
			row:selected & {
				&:not(:active):not(:checked):not(:hover):not(disabled) {
					color: $fg_color;
					border-color: transparentize($borders_color, .5);

					&:backdrop { color: $backdrop_fg_color; }
				}
			}
		}
	}
}

/**** dialog action box (non-CSD) margin tweaks ****/
dialog:not(messagedialog) {
	buttonbox, .dialog-action-area { margin: 8px; }
}

/**** scale/progressbar tweaks ****/
// increase contrast on CSD/header bars
headerbar {
	scale {
		fill, trough {
			border-color: if($variant == 'light',
										darken($borders_color, 8%),
										darken($borders_color, 4%));
			background-color: if($variant == 'light',
												darken($dark_fill, 8%),
												darken($dark_fill, 4%));
		}
	}
}

scale slider:not(.osd) {
	background-clip: padding-box;
	&, &:hover {
		border-color: if($variant == 'light',
									transparentize(black, 0.7),
									transparentize($alt_borders_color, 0.1));
	}

	&:active { border-color: $progress_border_color; }

	&:backdrop {
		border-color: if($variant == 'light',
									transparentize(black, 0.77),
									transparentize($alt_borders_color, 0.5));
	}
}

/**** window button tweaks ****/
$_titlebutton_hvr_color: if($variant == 'light', darken($headerbar_color,26%), darken($headerbar_color,11%));
$_titlebutton_prs_color: if($variant == 'light', darken($headerbar_color,30%), darken($headerbar_color,15%));

button.titlebutton {
	&:not(appmenu) {
		background-image: none;
		border-color: transparent;
		box-shadow: none;

		&:hover { background-color: $_titlebutton_hvr_color; }
		&:active, &:checked { background-color: $_titlebutton_prs_color; }

		&:backdrop {
			&, &:hover, &:active, &:checked { background: none; }
		}
	}
}

// misc tweaks
stackswitcher button.text-button { min-width: 6.25em; } // use em sizing
